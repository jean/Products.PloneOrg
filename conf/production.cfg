[buildout]
bin-directory = ../bin
develop-eggs-directory = ../develop-eggs
installed = ../.installed.cfg
parts-directory = ../parts
eggs-directory = ../eggs
sources-dir = ../src
extensions = 
    buildout.bootstrap
    buildout.dumppickedversions
    buildout.threatlevel
    mr.developer
extends =
    ../buildout.cfg
    ldap.cfg
    misc.cfg
#    haproxy.cfg
    xdv.cfg
    versions.cfg
find-links +=
    http://dist.plone.org/thirdparty/python-openid-2.2.4.tar.gz
    http://dist.plone.org/thirdparty/python-ldap-2.2.1.tar.gz
auto-checkout = 
    Products.ExternalStorage
    Products.FoundationMember
    Products.PloneHelpCenter
    Products.PloneSoftwareCenter
    Products.PloneServicesCenter
    Products.PolicyHTTPCacheManager
    collective.psc.blobstorage
    collective.psc.externalstorage
    collective.psc.mirroring
develop = ../

# This parts section must not extend any other parts, or LDAP will fail.
parts =
### The order matters here; ldap stuff first.
    python-ldap
    LDAPUserFolder
### END order.
    zeo
    instance1
    instance2
    instance3
    instance4
    instance5
    instance6
    instance7
    instance8
    debug-instance
    backup
    backup-cron
    supervisord.conf
    supervisor
#    haproxy
#    haproxy-conf
    xdv
    nginx
    nginx.conf
    mime.types
    plone.org.conf
    default.xsl
    wide.xsl
    vhosts-readme

eggs +=
    plone.app.ldap
    plone.app.caching
    Products.PloneOrg

[sources]
Products.ExternalStorage = svn https://svn.plone.org/svn/collective/Products.ExternalStorage/trunk
Products.FoundationMember = svn https://svn.plone.org/svn/plone/Products.FoundationMember/trunk
Products.PloneHelpCenter = svn https://svn.plone.org/svn/collective/Products.PloneHelpCenter/trunk
Products.PloneSoftwareCenter = svn https://svn.plone.org/svn/collective/Products.PloneSoftwareCenter/trunk
Products.PloneServicesCenter = svn https://svn.plone.org/svn/collective/Products.PloneServicesCenter/trunk
Products.PolicyHTTPCacheManager = svn http://svn.plone.org/svn/collective/Products.PolicyHTTPCacheManager/trunk/
collective.psc.blobstorage = svn https://svn.plone.org/svn/collective/collective.psc.blobstorage/trunk
collective.psc.externalstorage = svn https://svn.plone.org/svn/collective/collective.psc.externalstorage/trunk
collective.psc.mirroring = svn https://svn.plone.org/svn/collective/collective.psc.mirroring/trunk

[instance1]
recipe = ${instance:recipe}
user = ${instance:user}
eggs = ${buildout:eggs}

var = ${buildout:directory}/../var
effective-user = ${env:USER}
blob-storage = ${buildout:directory}/../var/blobstorage
shared-blob = on
zope-conf-additional =

    <zodb_db catalog>
        mount-point /plone.org/portal_catalog
        container-class Products.CMFPlone.CatalogTool.CatalogTool
        cache-size 300000
        <zeoclient>
            server ${hosts:localhost}:${ports:zeo}
            storage 2
            name catalogstorage
            var ${buildout:parts-directory}/instance1/var
            cache-size 400MB
        </zeoclient>
    </zodb_db>
    <environment>
        DISABLE_PTS 1
        TEMP ${buildout:directory}/tmp
        PYTHON_EGG_CACHE ${buildout:directory}/tmp
    </environment>
http-address = ${hosts:lanhost}:${ports:instance1}
zeo-client = true
zeo-address = ${hosts:localhost}:${ports:zeo}
zserver-threads = 2
zodb-cache-size = 10000
zeo-client-cache-size = 200MB

[instance2]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance2}

[instance3]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance3}

[instance4]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance4}

[instance5]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance5}

[instance6]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance6}

[instance7]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance7}

[instance8]
< = instance1
http-address = ${hosts:lanhost}:${ports:instance8}

[debug-instance]
< = instance1
http-address = ${ports:debug-instance}
eggs =
    ${buildout:eggs}
    Products.PDBDebugMode

[backup]
recipe = collective.recipe.backup
location = ${buildout:directory}/../var/backups
datafs = ${buildout:directory}/../var/filestorage/Data.fs
additional_filestorages = CatalogData

[backup-cron]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${buildout:bin-directory}/backup

[zeo]
recipe = plone.recipe.zeoserver
file-storage = ${buildout:directory}/../var/filestorage/Data.fs
zeo-address = ${hosts:localhost}:${ports:zeo}
zeo-conf-additional =
    <filestorage 2>
        path ${buildout:directory}/../var/filestorage/CatalogData.fs
    </filestorage>
blob-storage = ${buildout:directory}/../var/blobstorage
zeo-log = ${buildout:directory}/../var/log/zeo.log

[supervisord.conf]
recipe = collective.recipe.template
input = ../templates/supervisord.conf.in
output = ../etc/supervisord.conf
user = ${env:USER}
group = ${grp:GROUP}

[supervisor]
recipe = zc.recipe.egg

[env]
recipe = gocept.recipe.env

[zope.mkzeoinstance]
recipe = zc.recipe.egg

[grp]
recipe = collective.recipe.grp

[misc]
readme = ../README.txt

[vhosts-readme]
recipe = collective.recipe.template
input = ../templates/README-vhosts.txt.in
output = ../etc/vhosts/README-vhosts.txt

[plone.org.conf]
recipe = collective.recipe.template
virtual-host = VirtualHostBase/http/${hosts:production}:${ports:production}/plone.org/VirtualHostRoot
manage-virtual-host = VirtualHostBase/http/${hosts:manage}:${ports:production}/plone.org/VirtualHostRoot
upstream = server ${hosts:localhost}:${ports:upstream};
input = ../templates/plone.org.conf.in
output = ../etc/vhosts/plone.org.conf
listen = ${ports:nginx}
