[buildout]
extends =
    buildout.cfg
    ldap.cfg
    misc.cfg
    xdv.cfg
    versions.cfg
extensions +=
    buildout.dumppickedversions
    buildout.threatlevel
find-links +=
    http://dist.plone.org/thirdparty/python-openid-2.2.4.tar.gz
    http://dist.plone.org/thirdparty/python-ldap-2.2.1.tar.gz

# This parts section must not extend any other parts, or LDAP will fail.
parts =
### The order matters here; ldap stuff first.
    python-ldap
    LDAPUserFolder
### END order.
    zeo
    plone1
    plone2
    plone3
    plone4
    plone5
    plone6
    plone7
    plone8
    debug-instance
    backup
    backup-cron
    supervisord.conf
    supervisor
    default.xsl
    wide.xsl
    xdv

[sources]
Products.ExternalStorage = svn https://svn.plone.org/svn/collective/Products.ExternalStorage/trunk
Products.FoundationMember = svn https://svn.plone.org/svn/plone/Products.FoundationMember/trunk
Products.PloneHelpCenter = svn https://svn.plone.org/svn/collective/Products.PloneHelpCenter/trunk
Products.PloneSoftwareCenter = svn https://svn.plone.org/svn/collective/Products.PloneSoftwareCenter/trunk
Products.PolicyHTTPCacheManager = svn http://svn.plone.org/svn/collective/Products.PolicyHTTPCacheManager/trunk/
collective.psc.blobstorage = svn https://svn.plone.org/svn/collective/collective.psc.blobstorage/trunk
collective.psc.externalstorage = svn https://svn.plone.org/svn/collective/collective.psc.externalstorage/trunk
collective.psc.mirroring = svn https://svn.plone.org/svn/collective/collective.psc.mirroring/trunk

[plone1]
recipe = ${plone:recipe}
user = ${plone:user}
eggs = 
    ${plone:eggs}
    plone.app.ldap
    plone.app.caching

var = ${buildout:directory}/var
effective-user = ${env:USER}
blob-storage = ${buildout:directory}/var/blobstorage
shared-blob = on
zope-conf-additional =

    <zodb_db catalog>
        mount-point /plone.org/portal_catalog
        container-class Products.CMFPlone.CatalogTool.CatalogTool
        cache-size 300000
        <zeoclient>
            server ${hosts:localhost}:${ports:zeo}
            storage 2
            name catalogstorage
            var ${buildout:parts-directory}/plone1/var
            cache-size 400MB
        </zeoclient>
    </zodb_db>
    <environment>
        DISABLE_PTS 1
        TEMP ${buildout:directory}/tmp
        PYTHON_EGG_CACHE ${buildout:directory}/tmp
    </environment>
http-address = ${hosts:lanhost}:${ports:plone1}
zeo-client = true
zeo-address = ${hosts:localhost}:${ports:zeo}
zserver-threads = 2
zodb-cache-size = 10000
zeo-client-cache-size = 200MB

[plone2]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone2}

[plone3]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone3}

[plone4]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone4}

[plone5]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone5}

[plone6]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone6}

[plone7]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone7}

[plone8]
< = plone1
http-address = ${hosts:lanhost}:${ports:plone8}

[debug-instance]
< = plone1
http-address = ${ports:debug-instance}
eggs +=
    Products.PDBDebugMode

[backup]
recipe = collective.recipe.backup
location = ${buildout:directory}/var/backups
datafs = ${buildout:directory}/var/filestorage/Data.fs
additional_filestorages = CatalogData

[backup-cron]
recipe = z3c.recipe.usercrontab
times = 0 0 * * *
command = ${buildout:bin-directory}/backup

[zeo]
recipe = plone.recipe.zeoserver
file-storage = ${buildout:directory}/var/filestorage/Data.fs
zeo-address = ${hosts:localhost}:${ports:zeo}
zeo-conf-additional =
    <filestorage 2>
        path ${buildout:directory}/var/filestorage/CatalogData.fs
    </filestorage>
blob-storage = ${buildout:directory}/var/blobstorage
zeo-log = ${buildout:directory}/var/log/zeo.log

[supervisord.conf]
recipe = collective.recipe.template
input = templates/supervisord.conf.in
output = etc/supervisord.conf
user = ${env:USER}
group = ${grp:GROUP}

[supervisor]
recipe = zc.recipe.egg

[env]
recipe = gocept.recipe.env

[zope.mkzeoinstance]
recipe = zc.recipe.egg

[grp]
recipe = collective.recipe.grp
